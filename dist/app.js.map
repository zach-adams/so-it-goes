{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/string/lib/_count.js","node_modules/string/lib/_splitLeft.js","node_modules/string/lib/_splitRight.js","node_modules/string/lib/string.js","src/abbreviations.js","src/app.js","src/common_phrases.js","src/keywords.js","src/node_excludes.js","src/sentence_excludes.js","src/url_excludes.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","count","self","substr","pos","indexOf","splitLeft","sep","maxSplit","limit","splitResult","split","splitPart1","slice","splitPart2","concat","join","splitRight","splice","initialize","object","undefined","toString","orig","__defineGetter__","S","this","extendPrototype","name","__sp","func","__nsp","hasOwnProperty","methodsAdded","push","String","prototype","apply","arguments","restorePrototype","getNativeStringProperties","names","getNativeStringPropertyNames","retObj","type","results","Object","getOwnPropertyNames","stringNames","Export","str","multiArgs","args","fn","result","escapeRegExp","c","ret","re","ensureString","charAt","test","string","VERSION","ENTITIES","latin_map","Á","Ă","Ắ","Ặ","Ằ","Ẳ","Ẵ","Ǎ","Â","Ấ","Ậ","Ầ","Ẩ","Ẫ","Ä","Ǟ","Ȧ","Ǡ","Ạ","Ȁ","À","Ả","Ȃ","Ā","Ą","Å","Ǻ","Ḁ","Ⱥ","Ã","Ꜳ","Æ","Ǽ","Ǣ","Ꜵ","Ꜷ","Ꜹ","Ꜻ","Ꜽ","Ḃ","Ḅ","Ɓ","Ḇ","Ƀ","Ƃ","Ć","Č","Ç","Ḉ","Ĉ","Ċ","Ƈ","Ȼ","Ď","Ḑ","Ḓ","Ḋ","Ḍ","Ɗ","Ḏ","ǲ","ǅ","Đ","Ƌ","Ǳ","Ǆ","É","Ĕ","Ě","Ȩ","Ḝ","Ê","Ế","Ệ","Ề","Ể","Ễ","Ḙ","Ë","Ė","Ẹ","Ȅ","È","Ẻ","Ȇ","Ē","Ḗ","Ḕ","Ę","Ɇ","Ẽ","Ḛ","Ꝫ","Ḟ","Ƒ","Ǵ","Ğ","Ǧ","Ģ","Ĝ","Ġ","Ɠ","Ḡ","Ǥ","Ḫ","Ȟ","Ḩ","Ĥ","Ⱨ","Ḧ","Ḣ","Ḥ","Ħ","Í","Ĭ","Ǐ","Î","Ï","Ḯ","İ","Ị","Ȉ","Ì","Ỉ","Ȋ","Ī","Į","Ɨ","Ĩ","Ḭ","Ꝺ","Ꝼ","Ᵹ","Ꞃ","Ꞅ","Ꞇ","Ꝭ","Ĵ","Ɉ","Ḱ","Ǩ","Ķ","Ⱪ","Ꝃ","Ḳ","Ƙ","Ḵ","Ꝁ","Ꝅ","Ĺ","Ƚ","Ľ","Ļ","Ḽ","Ḷ","Ḹ","Ⱡ","Ꝉ","Ḻ","Ŀ","Ɫ","ǈ","Ł","Ǉ","Ḿ","Ṁ","Ṃ","Ɱ","Ń","Ň","Ņ","Ṋ","Ṅ","Ṇ","Ǹ","Ɲ","Ṉ","Ƞ","ǋ","Ñ","Ǌ","Ó","Ŏ","Ǒ","Ô","Ố","Ộ","Ồ","Ổ","Ỗ","Ö","Ȫ","Ȯ","Ȱ","Ọ","Ő","Ȍ","Ò","Ỏ","Ơ","Ớ","Ợ","Ờ","Ở","Ỡ","Ȏ","Ꝋ","Ꝍ","Ō","Ṓ","Ṑ","Ɵ","Ǫ","Ǭ","Ø","Ǿ","Õ","Ṍ","Ṏ","Ȭ","Ƣ","Ꝏ","Ɛ","Ɔ","Ȣ","Ṕ","Ṗ","Ꝓ","Ƥ","Ꝕ","Ᵽ","Ꝑ","Ꝙ","Ꝗ","Ŕ","Ř","Ŗ","Ṙ","Ṛ","Ṝ","Ȑ","Ȓ","Ṟ","Ɍ","Ɽ","Ꜿ","Ǝ","Ś","Ṥ","Š","Ṧ","Ş","Ŝ","Ș","Ṡ","Ṣ","Ṩ","ẞ","Ť","Ţ","Ṱ","Ț","Ⱦ","Ṫ","Ṭ","Ƭ","Ṯ","Ʈ","Ŧ","Ɐ","Ꞁ","Ɯ","Ʌ","Ꜩ","Ú","Ŭ","Ǔ","Û","Ṷ","Ü","Ǘ","Ǚ","Ǜ","Ǖ","Ṳ","Ụ","Ű","Ȕ","Ù","Ủ","Ư","Ứ","Ự","Ừ","Ử","Ữ","Ȗ","Ū","Ṻ","Ų","Ů","Ũ","Ṹ","Ṵ","Ꝟ","Ṿ","Ʋ","Ṽ","Ꝡ","Ẃ","Ŵ","Ẅ","Ẇ","Ẉ","Ẁ","Ⱳ","Ẍ","Ẋ","Ý","Ŷ","Ÿ","Ẏ","Ỵ","Ỳ","Ƴ","Ỷ","Ỿ","Ȳ","Ɏ","Ỹ","Ź","Ž","Ẑ","Ⱬ","Ż","Ẓ","Ȥ","Ẕ","Ƶ","Ĳ","Œ","ᴀ","ᴁ","ʙ","ᴃ","ᴄ","ᴅ","ᴇ","ꜰ","ɢ","ʛ","ʜ","ɪ","ʁ","ᴊ","ᴋ","ʟ","ᴌ","ᴍ","ɴ","ᴏ","ɶ","ᴐ","ᴕ","ᴘ","ʀ","ᴎ","ᴙ","ꜱ","ᴛ","ⱻ","ᴚ","ᴜ","ᴠ","ᴡ","ʏ","ᴢ","á","ă","ắ","ặ","ằ","ẳ","ẵ","ǎ","â","ấ","ậ","ầ","ẩ","ẫ","ä","ǟ","ȧ","ǡ","ạ","ȁ","à","ả","ȃ","ā","ą","ᶏ","ẚ","å","ǻ","ḁ","ⱥ","ã","ꜳ","æ","ǽ","ǣ","ꜵ","ꜷ","ꜹ","ꜻ","ꜽ","ḃ","ḅ","ɓ","ḇ","ᵬ","ᶀ","ƀ","ƃ","ɵ","ć","č","ç","ḉ","ĉ","ɕ","ċ","ƈ","ȼ","ď","ḑ","ḓ","ȡ","ḋ","ḍ","ɗ","ᶑ","ḏ","ᵭ","ᶁ","đ","ɖ","ƌ","ı","ȷ","ɟ","ʄ","ǳ","ǆ","é","ĕ","ě","ȩ","ḝ","ê","ế","ệ","ề","ể","ễ","ḙ","ë","ė","ẹ","ȅ","è","ẻ","ȇ","ē","ḗ","ḕ","ⱸ","ę","ᶒ","ɇ","ẽ","ḛ","ꝫ","ḟ","ƒ","ᵮ","ᶂ","ǵ","ğ","ǧ","ģ","ĝ","ġ","ɠ","ḡ","ᶃ","ǥ","ḫ","ȟ","ḩ","ĥ","ⱨ","ḧ","ḣ","ḥ","ɦ","ẖ","ħ","ƕ","í","ĭ","ǐ","î","ï","ḯ","ị","ȉ","ì","ỉ","ȋ","ī","į","ᶖ","ɨ","ĩ","ḭ","ꝺ","ꝼ","ᵹ","ꞃ","ꞅ","ꞇ","ꝭ","ǰ","ĵ","ʝ","ɉ","ḱ","ǩ","ķ","ⱪ","ꝃ","ḳ","ƙ","ḵ","ᶄ","ꝁ","ꝅ","ĺ","ƚ","ɬ","ľ","ļ","ḽ","ȴ","ḷ","ḹ","ⱡ","ꝉ","ḻ","ŀ","ɫ","ᶅ","ɭ","ł","ǉ","ſ","ẜ","ẛ","ẝ","ḿ","ṁ","ṃ","ɱ","ᵯ","ᶆ","ń","ň","ņ","ṋ","ȵ","ṅ","ṇ","ǹ","ɲ","ṉ","ƞ","ᵰ","ᶇ","ɳ","ñ","ǌ","ó","ŏ","ǒ","ô","ố","ộ","ồ","ổ","ỗ","ö","ȫ","ȯ","ȱ","ọ","ő","ȍ","ò","ỏ","ơ","ớ","ợ","ờ","ở","ỡ","ȏ","ꝋ","ꝍ","ⱺ","ō","ṓ","ṑ","ǫ","ǭ","ø","ǿ","õ","ṍ","ṏ","ȭ","ƣ","ꝏ","ɛ","ᶓ","ɔ","ᶗ","ȣ","ṕ","ṗ","ꝓ","ƥ","ᵱ","ᶈ","ꝕ","ᵽ","ꝑ","ꝙ","ʠ","ɋ","ꝗ","ŕ","ř","ŗ","ṙ","ṛ","ṝ","ȑ","ɾ","ᵳ","ȓ","ṟ","ɼ","ᵲ","ᶉ","ɍ","ɽ","ↄ","ꜿ","ɘ","ɿ","ś","ṥ","š","ṧ","ş","ŝ","ș","ṡ","ṣ","ṩ","ʂ","ᵴ","ᶊ","ȿ","ɡ","ß","ᴑ","ᴓ","ᴝ","ť","ţ","ṱ","ț","ȶ","ẗ","ⱦ","ṫ","ṭ","ƭ","ṯ","ᵵ","ƫ","ʈ","ŧ","ᵺ","ɐ","ᴂ","ǝ","ᵷ","ɥ","ʮ","ʯ","ᴉ","ʞ","ꞁ","ɯ","ɰ","ᴔ","ɹ","ɻ","ɺ","ⱹ","ʇ","ʌ","ʍ","ʎ","ꜩ","ú","ŭ","ǔ","û","ṷ","ü","ǘ","ǚ","ǜ","ǖ","ṳ","ụ","ű","ȕ","ù","ủ","ư","ứ","ự","ừ","ử","ữ","ȗ","ū","ṻ","ų","ᶙ","ů","ũ","ṹ","ṵ","ᵫ","ꝸ","ⱴ","ꝟ","ṿ","ʋ","ᶌ","ⱱ","ṽ","ꝡ","ẃ","ŵ","ẅ","ẇ","ẉ","ẁ","ⱳ","ẘ","ẍ","ẋ","ᶍ","ý","ŷ","ÿ","ẏ","ỵ","ỳ","ƴ","ỷ","ỿ","ȳ","ẙ","ɏ","ỹ","ź","ž","ẑ","ʑ","ⱬ","ż","ẓ","ȥ","ẕ","ᵶ","ᶎ","ʐ","ƶ","ɀ","ﬀ","ﬃ","ﬄ","ﬁ","ﬂ","ĳ","œ","ﬆ","ₐ","ₑ","ᵢ","ⱼ","ₒ","ᵣ","ᵤ","ᵥ","ₓ","between","left","right","startPos","endPos","constructor","substring","camelize","trim","replace","mathc","toUpperCase","capitalize","toLowerCase","index","chompLeft","prefix","chompRight","suffix","endsWith","collapseWhitespace","contains","ss","dasherize","latinise","x","decodeHtmlEntities","_","fromCharCode","hex","parseInt","m","ee","target","match","suffixes","Array","escapeHTML","reversedEscapeChars","ensureLeft","ensureRight","humanize","underscore","isAlpha","isAlphaNumeric","isEmpty","isLower","isNumeric","isUpper","N","lines","replaceAll","pad","len","ch","Math","ceil","floor","padLeft","padRight","parseCSV","delimiter","qualifier","escape","lineDelimiter","fieldBuffer","fields","inField","inUnqualifiedString","ca","rows","current","strip","stripLeft","chars","regex","pattern","RegExp","stripRight","setValue","slugify","sl","startsWith","prefixes","lastIndexOf","stripPunctuation","stripTags","tag","template","values","opening","closing","TMPL_OPEN","TMPL_CLOSE","open","close","matches","forEach","key","value","times","titleCase","$1","toBoolean","toFloat","precision","num","parseFloat","toFixed","toInt","trimLeft","trimRight","truncate","pruneStr","tmpl","toCSV","hasVal","it","delim","encloseNumbers","keys","dataArray","separator","rep","buildString","shouldQualify","d","unescapeHTML","entity","entityCode","escapeChars","valueOf","wrapHTML","tagName","tagAttrs","el","elAttr","wrapped","prop","nativeProperties","stringProp","repeat","include","toInteger","toBool","decodeHTMLEntities","define","amd","window","lt","gt","quot","apos","amp","AElig","Aacute","Acirc","Agrave","Aring","Atilde","Auml","Ccedil","ETH","Eacute","Ecirc","Egrave","Euml","Iacute","Icirc","Igrave","Iuml","Ntilde","Oacute","Ocirc","Ograve","Oslash","Otilde","Ouml","THORN","Uacute","Ucirc","Ugrave","Uuml","Yacute","aacute","acirc","aelig","agrave","aring","atilde","auml","ccedil","eacute","ecirc","egrave","eth","euml","iacute","icirc","igrave","iuml","ntilde","oacute","ocirc","ograve","oslash","otilde","ouml","szlig","thorn","uacute","ucirc","ugrave","uuml","yacute","yuml","copy","reg","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","ordf","laquo","not","shy","macr","deg","plusmn","sup1","sup2","sup3","acute","micro","para","middot","cedil","ordm","raquo","frac14","frac12","frac34","iquest","divide","OElig;","oelig;","Scaron;","scaron;","Yuml;","fnof;","circ;","tilde;","Alpha;","Beta;","Gamma;","Delta;","Epsilon;","Zeta;","Eta;","Theta;","Iota;","Kappa;","Lambda;","Mu;","Nu;","Xi;","Omicron;","Pi;","Rho;","Sigma;","Tau;","Upsilon;","Phi;","Chi;","Psi;","Omega;","alpha;","beta;","gamma;","delta;","epsilon;","zeta;","eta;","theta;","iota;","kappa;","lambda;","mu;","nu;","xi;","omicron;","pi;","rho;","sigmaf;","sigma;","tau;","upsilon;","phi;","chi;","psi;","omega;","thetasym;","upsih;","piv;","ensp;","emsp;","thinsp;","zwnj;","zwj;","lrm;","rlm;","ndash;","mdash;","lsquo;","rsquo;","sbquo;","ldquo;","rdquo;","bdquo;","dagger;","Dagger;","bull;","hellip;","permil;","prime;","Prime;","lsaquo;","rsaquo;","oline;","frasl;","euro;","image;","weierp;","real;","trade;","alefsym;","larr;","uarr;","rarr;","darr;","harr;","crarr;","lArr;","uArr;","rArr;","dArr;","hArr;","forall;","part;","exist;","empty;","nabla;","isin;","notin;","ni;","prod;","sum;","minus;","lowast;","radic;","prop;","infin;","ang;","and;","or;","cap;","cup;","int;","there4;","sim;","cong;","asymp;","ne;","equiv;","le;","ge;","sub;","sup;","nsub;","sube;","supe;","oplus;","otimes;","perp;","sdot;","lceil;","rceil;","lfloor;","rfloor;","lang;","rang;","loz;","spades;","clubs;","hearts;","diams;","commonContractions","processNodes","nodes","nodesIndex","processNode","node","nodeType","nodeExcludes","nodeName","keywordRegex","textContent","inlineTags","processedNodes","isSameNode","parentNode","processInlineTextNode","hasChildNodes","childNodes","replaceKeywordInTextNode","parentNodeText","innerHTML","nodeSentences","parseSentencesFromString","keyPhrase","keywordSentences","findKeywordInSentences","replacedText","addKeywordToSentences","stopObserver","startObserver","nodeText","text","sentences","sentence","sentenceEndingExcludes","hasCommonPhrase","abbreviations","commonPhrases","addKeywordToSentence","newSentence","observer","disconnect","observe","document","body","config","urlExcluded","url","urlExcludes","keywords","MutationObserver","mutations","mutation","addedNodes","subtree","childList","characterData","location","href","excludes"],"mappings":"CAAA,QAAAA,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAK,GAAA,GAAAC,OAAA,uBAAAN,EAAA,IAAA,MAAAK,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAX,EAAAG,IAAAS,WAAAb,GAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAS,QAAA,IAAA,GAAAL,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAa,GAAA,SAAAT,EAAAU,EAAAJ,GCAA,QAAAK,GAAAC,EAAAC,GAIA,IAHA,GAAAF,GAAA,EACAG,EAAAF,EAAAG,QAAAF,GAEAC,GAAA,GACAH,GAAA,EACAG,EAAAF,EAAAG,QAAAF,EAAAC,EAAA,EAGA,OAAAH,GAGAD,EAAAJ,QAAAK,0BCZA,QAAAK,GAAAJ,EAAAK,EAAAC,EAAAC,GAEA,GAAA,mBAAAD,GACA,GAAAA,IAAA,CAGA,IAAAE,GAAAR,EAAAS,MAAAJ,GACAK,EAAAF,EAAAG,MAAA,EAAAL,GACAM,EAAAJ,EAAAG,MAAAL,EAQA,OALAE,GADA,IAAAI,EAAAhB,OACAc,EAEAA,EAAAG,OAAAD,EAAAE,KAAAT,IAGA,mBAAAE,GACAC,EACAD,EAAA,EACAC,EAAAG,MAAAJ,GAEAC,EAAAG,MAAA,EAAAJ,GAKAT,EAAAJ,QAAAU,0BC1BA,QAAAW,GAAAf,EAAAK,EAAAC,EAAAC,GAEA,GAAA,mBAAAD,GACA,GAAAA,IAAA,CAEA,IAAA,mBAAAC,GACA,GAAAA,GAAA,CAKA,KAAA,GAFAC,IAAAR,GAEAX,EAAAW,EAAAJ,OAAA,EAAAP,GAAA,EAAAA,IAGA,IAAAmB,EAAA,GAAAG,MAAAtB,GAAAc,QAAAE,KACAG,EAAAZ,QAAAU,GAAAA,KAAA,KAEAE,EAAAQ,OAAA,EAAA,EAAAR,EAAA,GAAAG,MAAAtB,EAAAgB,EAAAT,SACAY,EAAA,GAAAA,EAAA,GAAAG,MAAA,EAAAtB,GAIA,OAAAkB,IAAA,EACAC,EAAAG,OAAAJ,GAEAC,EAAAG,MAAA,GAAAJ,GAKAT,EAAAJ,QAAAqB,2BC1BA,WACA,YA2BA,SAAAE,GAAAC,EAAAlC,GACA,OAAAA,GAAAmC,SAAAnC,EACA,gBAAAA,GACAkC,EAAAlC,EAAAA,EAEAkC,EAAAlC,EAAAA,EAAAoC,WAEAF,EAAAlC,EAAAA,EAGAkC,EAAAG,KAAArC,EAEA,OAAAA,GAAAmC,SAAAnC,EACAkC,EAAAI,iBACAJ,EAAAI,iBAAA,SAAA,WACA,MAAAJ,GAAAlC,EAAAY,SAGAsB,EAAAtB,OAAAZ,EAAAY,OAGAsB,EAAAtB,QAAA,EAIA,QAAA2B,GAAAvC,GACAiC,EAAAO,KAAAxC,GA4kBA,QAAAyC,KACA,IAAA,GAAAC,KAAAC,IACA,SAAAD,GACA,GAAAE,GAAAD,EAAAD,EACAG,GAAAC,eAAAJ,KACAK,EAAAC,KAAAN,GACAG,EAAAH,GAAA,WAEA,MADAO,QAAAC,UAAAlD,EAAAwC,KACAI,EAAAO,MAAAX,KAAAY,cAGAV,GAIA,QAAAW,KACA,IAAA,GAAAhD,GAAA,EAAAA,EAAA0C,EAAAnC,SAAAP,QACA4C,QAAAC,UAAAH,EAAA1C,GACA0C,GAAAnC,OAAA,EAoDA,QAAA0C,KAIA,IAAA,GAHAC,GAAAC,IACAC,KAEApD,EAAA,EAAAA,EAAAkD,EAAA3C,SAAAP,EAAA,CACA,GAAAqC,GAAAa,EAAAlD,EACA,IAAA,OAAAqC,GAAA,UAAAA,EAAA,CACA,GAAAE,GAAAC,EAAAH,EACA,KACA,GAAAgB,SAAAd,GAAAO,MAAA,aACAM,GAAAf,GAAAgB,EACA,MAAA9D,MAEA,MAAA6D,GAGA,QAAAD,KACA,GAAAG,KACA,IAAAC,OAAAC,oBAIA,MAHAF,GAAAC,OAAAC,oBAAAhB,GACAc,EAAA3B,OAAA2B,EAAAxC,QAAA,WAAA,GACAwC,EAAA3B,OAAA2B,EAAAxC,QAAA,YAAA,GACAwC,CAEA,IAAAG,KAEA,KAAA,GAAApB,KAAAO,QAAAC,UACAY,EAAApB,GAAAA,CAEA,KAAA,GAAAA,KAAAkB,QAAAV,gBACAY,GAAApB,EAGA,KAAA,GAAAA,KAAAoB,GACAH,EAAAX,KAAAN,EAEA,OAAAiB,GAIA,QAAAI,GAAAC,GACA,MAAA,IAAAzB,GAAAyB,GAqCA,QAAAC,GAAAC,EAAAC,GACA,GAAA9D,GAAA+D,IACA,KAAA/D,EAAA,EAAAA,EAAA6D,EAAAtD,OAAAP,IACA+D,EAAApB,KAAAkB,EAAA7D,IACA8D,GAAAA,EAAAxD,KAAAuD,EAAAA,EAAA7D,GAAAA,EAEA,OAAA+D,GAYA,QAAAC,GAAArE,GAEA,GAAAsE,GACAjE,EACAkE,KACAC,EAAA,gBAEA,KADAxE,EAAAyE,EAAAzE,GACAK,EAAA,EAAAA,EAAAL,EAAAY,SAAAP,EACAiE,EAAAtE,EAAA0E,OAAArE,GAEAmE,EAAAG,KAAAL,GACAC,EAAAvB,KAAAsB,GAGA,UAAAA,EACAC,EAAAvB,KAAA,SAGAuB,EAAAvB,KAAA,KAAAsB,EAIA,OAAAC,GAAAzC,KAAA,IAGA,QAAA2C,GAAAG,GACA,MAAA,OAAAA,EAAA,GAAA,GAAAA,EA/zBA,GAAAC,GAAA,QAEAC,KAGAC,GAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,I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A,IACAC,MAAA,IACAC,MAAA,IACAC,MAAA,IACAC,WAAA,IACAC,MAAA,IACAC,OAAA,IACAC,SAAA,IACAC,OAAA,IACAC,WAAA,IACAC,OAAA,IACAC,OAAA,IACAC,OAAA,IACAC,SAAA,IACAC,SAAA,IACAC,QAAA,IACAC,SAAA,IACAC,SAAA,IACAC,WAAA,IACAC,QAAA,IACAC,OAAA,IACAC,SAAA,IACAC,QAAA,IACAC,SAAA,IACAC,UAAA,IACAC,MAAA,IACAC,MAAA,IACAC,MAAA,IACAC,WAAA,IACAC,MAAA,IACAC,OAAA,IACAC,UAAA,IACAC,SAAA,IACAC,OAAA,IACAC,WAAA,IACAC,OAAA,IACAC,OAAA,IACAC,OAAA,IACAC,SAAA,IACAC,YAAA,IACAC,SAAA,IACAC,OAAA,IACAC,QAAA,KACAC,QAAA,KACAC,UAAA,KACAC,QAAA,KACAC,OAAA,KACAC,OAAA,KACAC,OAAA,KACAC,SAAA,KACAC,SAAA,KACAC,SAAA,KACAC,SAAA,KACAC,SAAA,KACAC,SAAA,KACAC,SAAA,KACAC,SAAA,KACAC,UAAA,KACAC,UAAA,KACAC,QAAA,KACAC,UAAA,KACAC,UAAA,KACAC,SAAA,KACAC,SAAA,KACAC,UAAA,KACAC,UAAA,KACAC,SAAA,KACAC,SAAA,KACAC,QAAA,KACAC,SAAA,KACAC,UAAA,KACAC,QAAA,KACAC,SAAA,KACAC,WAAA,KACAC,QAAA,KACAC,QAAA,KACAC,QAAA,KACAC,QAAA,KACAC,QAAA,KACAC,SAAA,KACAC,QAAA,KACAC,QAAA,KACAC,QAAA,KACAC,QAAA,KACAC,QAAA,KACAC,UAAA,KACAC,QAAA,KACAC,SAAA,KACAC,SAAA,KACAC,SAAA,KACAC,QAAA,KACAC,SAAA,KACAC,MAAA,KACAC,QAAA,KACAC,OAAA,KACAC,SAAA,KACAC,UAAA,KACAC,SAAA,KACAC,QAAA,KACAC,SAAA,KACAC,OAAA,KACAC,OAAA,KACAC,MAAA,KACAC,OAAA,KACAC,OAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,QAAA,KACAC,SAAA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","file":"app.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","function count(self, substr) {\n  var count = 0\n  var pos = self.indexOf(substr)\n\n  while (pos >= 0) {\n    count += 1\n    pos = self.indexOf(substr, pos + 1)\n  }\n\n  return count\n}\n\nmodule.exports = count","function splitLeft(self, sep, maxSplit, limit) {\n\n  if (typeof maxSplit === 'undefined') {\n    var maxSplit = -1;\n  }\n\n  var splitResult = self.split(sep);\n  var splitPart1 = splitResult.slice(0, maxSplit);\n  var splitPart2 = splitResult.slice(maxSplit);\n\n  if (splitPart2.length === 0) {\n    splitResult = splitPart1;\n  } else {\n    splitResult = splitPart1.concat(splitPart2.join(sep));\n  }\n\n  if (typeof limit === 'undefined') {\n    return splitResult;\n  } else if (limit < 0) {\n    return splitResult.slice(limit);\n  } else {\n    return splitResult.slice(0, limit);\n  }\n\n}\n\nmodule.exports = splitLeft;\n","function splitRight(self, sep, maxSplit, limit) {\n\n  if (typeof maxSplit === 'undefined') {\n    var maxSplit = -1;\n  }\n  if (typeof limit === 'undefined') {\n    var limit = 0;\n  }\n\n  var splitResult = [self];\n\n  for (var i = self.length-1; i >= 0; i--) {\n\n    if (\n      splitResult[0].slice(i).indexOf(sep) === 0 &&\n      (splitResult.length <= maxSplit || maxSplit === -1)\n    ) {\n      splitResult.splice(1, 0, splitResult[0].slice(i+sep.length)); // insert\n      splitResult[0] = splitResult[0].slice(0, i)\n    }\n  }\n\n  if (limit >= 0) {\n    return splitResult.slice(-limit);\n  } else {\n    return splitResult.slice(0, -limit);\n  }\n\n}\n\nmodule.exports = splitRight;\n","/*\nstring.js - Copyright (C) 2012-2014, JP Richardson <jprichardson@gmail.com>\n*/\n\n!(function() {\n  \"use strict\";\n\n  var VERSION = '3.3.1';\n\n  var ENTITIES = {};\n\n  // from http://semplicewebsites.com/removing-accents-javascript\n  var latin_map={\"Á\":\"A\",\"Ă\":\"A\",\"Ắ\":\"A\",\"Ặ\":\"A\",\"Ằ\":\"A\",\"Ẳ\":\"A\",\"Ẵ\":\"A\",\"Ǎ\":\"A\",\"Â\":\"A\",\"Ấ\":\"A\",\"Ậ\":\"A\",\"Ầ\":\"A\",\"Ẩ\":\"A\",\"Ẫ\":\"A\",\"Ä\":\"A\",\"Ǟ\":\"A\",\"Ȧ\":\"A\",\"Ǡ\":\"A\",\"Ạ\":\"A\",\"Ȁ\":\"A\",\"À\":\"A\",\"Ả\":\"A\",\"Ȃ\":\"A\",\"Ā\":\"A\",\"Ą\":\"A\",\"Å\":\"A\",\"Ǻ\":\"A\",\"Ḁ\":\"A\",\"Ⱥ\":\"A\",\"Ã\":\"A\",\"Ꜳ\":\"AA\",\"Æ\":\"AE\",\"Ǽ\":\"AE\",\"Ǣ\":\"AE\",\"Ꜵ\":\"AO\",\"Ꜷ\":\"AU\",\"Ꜹ\":\"AV\",\"Ꜻ\":\"AV\",\"Ꜽ\":\"AY\",\"Ḃ\":\"B\",\"Ḅ\":\"B\",\"Ɓ\":\"B\",\"Ḇ\":\"B\",\"Ƀ\":\"B\",\"Ƃ\":\"B\",\"Ć\":\"C\",\"Č\":\"C\",\"Ç\":\"C\",\"Ḉ\":\"C\",\"Ĉ\":\"C\",\"Ċ\":\"C\",\"Ƈ\":\"C\",\"Ȼ\":\"C\",\"Ď\":\"D\",\"Ḑ\":\"D\",\"Ḓ\":\"D\",\"Ḋ\":\"D\",\"Ḍ\":\"D\",\"Ɗ\":\"D\",\"Ḏ\":\"D\",\"ǲ\":\"D\",\"ǅ\":\"D\",\"Đ\":\"D\",\"Ƌ\":\"D\",\"Ǳ\":\"DZ\",\"Ǆ\":\"DZ\",\"É\":\"E\",\"Ĕ\":\"E\",\"Ě\":\"E\",\"Ȩ\":\"E\",\"Ḝ\":\"E\",\"Ê\":\"E\",\"Ế\":\"E\",\"Ệ\":\"E\",\"Ề\":\"E\",\"Ể\":\"E\",\"Ễ\":\"E\",\"Ḙ\":\"E\",\"Ë\":\"E\",\"Ė\":\"E\",\"Ẹ\":\"E\",\"Ȅ\":\"E\",\"È\":\"E\",\"Ẻ\":\"E\",\"Ȇ\":\"E\",\"Ē\":\"E\",\"Ḗ\":\"E\",\"Ḕ\":\"E\",\"Ę\":\"E\",\"Ɇ\":\"E\",\"Ẽ\":\"E\",\"Ḛ\":\"E\",\"Ꝫ\":\"ET\",\"Ḟ\":\"F\",\"Ƒ\":\"F\",\"Ǵ\":\"G\",\"Ğ\":\"G\",\"Ǧ\":\"G\",\"Ģ\":\"G\",\"Ĝ\":\"G\",\"Ġ\":\"G\",\"Ɠ\":\"G\",\"Ḡ\":\"G\",\"Ǥ\":\"G\",\"Ḫ\":\"H\",\"Ȟ\":\"H\",\"Ḩ\":\"H\",\"Ĥ\":\"H\",\"Ⱨ\":\"H\",\"Ḧ\":\"H\",\"Ḣ\":\"H\",\"Ḥ\":\"H\",\"Ħ\":\"H\",\"Í\":\"I\",\"Ĭ\":\"I\",\"Ǐ\":\"I\",\"Î\":\"I\",\"Ï\":\"I\",\"Ḯ\":\"I\",\"İ\":\"I\",\"Ị\":\"I\",\"Ȉ\":\"I\",\"Ì\":\"I\",\"Ỉ\":\"I\",\"Ȋ\":\"I\",\"Ī\":\"I\",\"Į\":\"I\",\"Ɨ\":\"I\",\"Ĩ\":\"I\",\"Ḭ\":\"I\",\"Ꝺ\":\"D\",\"Ꝼ\":\"F\",\"Ᵹ\":\"G\",\"Ꞃ\":\"R\",\"Ꞅ\":\"S\",\"Ꞇ\":\"T\",\"Ꝭ\":\"IS\",\"Ĵ\":\"J\",\"Ɉ\":\"J\",\"Ḱ\":\"K\",\"Ǩ\":\"K\",\"Ķ\":\"K\",\"Ⱪ\":\"K\",\"Ꝃ\":\"K\",\"Ḳ\":\"K\",\"Ƙ\":\"K\",\"Ḵ\":\"K\",\"Ꝁ\":\"K\",\"Ꝅ\":\"K\",\"Ĺ\":\"L\",\"Ƚ\":\"L\",\"Ľ\":\"L\",\"Ļ\":\"L\",\"Ḽ\":\"L\",\"Ḷ\":\"L\",\"Ḹ\":\"L\",\"Ⱡ\":\"L\",\"Ꝉ\":\"L\",\"Ḻ\":\"L\",\"Ŀ\":\"L\",\"Ɫ\":\"L\",\"ǈ\":\"L\",\"Ł\":\"L\",\"Ǉ\":\"LJ\",\"Ḿ\":\"M\",\"Ṁ\":\"M\",\"Ṃ\":\"M\",\"Ɱ\":\"M\",\"Ń\":\"N\",\"Ň\":\"N\",\"Ņ\":\"N\",\"Ṋ\":\"N\",\"Ṅ\":\"N\",\"Ṇ\":\"N\",\"Ǹ\":\"N\",\"Ɲ\":\"N\",\"Ṉ\":\"N\",\"Ƞ\":\"N\",\"ǋ\":\"N\",\"Ñ\":\"N\",\"Ǌ\":\"NJ\",\"Ó\":\"O\",\"Ŏ\":\"O\",\"Ǒ\":\"O\",\"Ô\":\"O\",\"Ố\":\"O\",\"Ộ\":\"O\",\"Ồ\":\"O\",\"Ổ\":\"O\",\"Ỗ\":\"O\",\"Ö\":\"O\",\"Ȫ\":\"O\",\"Ȯ\":\"O\",\"Ȱ\":\"O\",\"Ọ\":\"O\",\"Ő\":\"O\",\"Ȍ\":\"O\",\"Ò\":\"O\",\"Ỏ\":\"O\",\"Ơ\":\"O\",\"Ớ\":\"O\",\"Ợ\":\"O\",\"Ờ\":\"O\",\"Ở\":\"O\",\"Ỡ\":\"O\",\"Ȏ\":\"O\",\"Ꝋ\":\"O\",\"Ꝍ\":\"O\",\"Ō\":\"O\",\"Ṓ\":\"O\",\"Ṑ\":\"O\",\"Ɵ\":\"O\",\"Ǫ\":\"O\",\"Ǭ\":\"O\",\"Ø\":\"O\",\"Ǿ\":\"O\",\"Õ\":\"O\",\"Ṍ\":\"O\",\"Ṏ\":\"O\",\"Ȭ\":\"O\",\"Ƣ\":\"OI\",\"Ꝏ\":\"OO\",\"Ɛ\":\"E\",\"Ɔ\":\"O\",\"Ȣ\":\"OU\",\"Ṕ\":\"P\",\"Ṗ\":\"P\",\"Ꝓ\":\"P\",\"Ƥ\":\"P\",\"Ꝕ\":\"P\",\"Ᵽ\":\"P\",\"Ꝑ\":\"P\",\"Ꝙ\":\"Q\",\"Ꝗ\":\"Q\",\"Ŕ\":\"R\",\"Ř\":\"R\",\"Ŗ\":\"R\",\"Ṙ\":\"R\",\"Ṛ\":\"R\",\"Ṝ\":\"R\",\"Ȑ\":\"R\",\"Ȓ\":\"R\",\"Ṟ\":\"R\",\"Ɍ\":\"R\",\"Ɽ\":\"R\",\"Ꜿ\":\"C\",\"Ǝ\":\"E\",\"Ś\":\"S\",\"Ṥ\":\"S\",\"Š\":\"S\",\"Ṧ\":\"S\",\"Ş\":\"S\",\"Ŝ\":\"S\",\"Ș\":\"S\",\"Ṡ\":\"S\",\"Ṣ\":\"S\",\"Ṩ\":\"S\",\"ẞ\":\"SS\",\"Ť\":\"T\",\"Ţ\":\"T\",\"Ṱ\":\"T\",\"Ț\":\"T\",\"Ⱦ\":\"T\",\"Ṫ\":\"T\",\"Ṭ\":\"T\",\"Ƭ\":\"T\",\"Ṯ\":\"T\",\"Ʈ\":\"T\",\"Ŧ\":\"T\",\"Ɐ\":\"A\",\"Ꞁ\":\"L\",\"Ɯ\":\"M\",\"Ʌ\":\"V\",\"Ꜩ\":\"TZ\",\"Ú\":\"U\",\"Ŭ\":\"U\",\"Ǔ\":\"U\",\"Û\":\"U\",\"Ṷ\":\"U\",\"Ü\":\"U\",\"Ǘ\":\"U\",\"Ǚ\":\"U\",\"Ǜ\":\"U\",\"Ǖ\":\"U\",\"Ṳ\":\"U\",\"Ụ\":\"U\",\"Ű\":\"U\",\"Ȕ\":\"U\",\"Ù\":\"U\",\"Ủ\":\"U\",\"Ư\":\"U\",\"Ứ\":\"U\",\"Ự\":\"U\",\"Ừ\":\"U\",\"Ử\":\"U\",\"Ữ\":\"U\",\"Ȗ\":\"U\",\"Ū\":\"U\",\"Ṻ\":\"U\",\"Ų\":\"U\",\"Ů\":\"U\",\"Ũ\":\"U\",\"Ṹ\":\"U\",\"Ṵ\":\"U\",\"Ꝟ\":\"V\",\"Ṿ\":\"V\",\"Ʋ\":\"V\",\"Ṽ\":\"V\",\"Ꝡ\":\"VY\",\"Ẃ\":\"W\",\"Ŵ\":\"W\",\"Ẅ\":\"W\",\"Ẇ\":\"W\",\"Ẉ\":\"W\",\"Ẁ\":\"W\",\"Ⱳ\":\"W\",\"Ẍ\":\"X\",\"Ẋ\":\"X\",\"Ý\":\"Y\",\"Ŷ\":\"Y\",\"Ÿ\":\"Y\",\"Ẏ\":\"Y\",\"Ỵ\":\"Y\",\"Ỳ\":\"Y\",\"Ƴ\":\"Y\",\"Ỷ\":\"Y\",\"Ỿ\":\"Y\",\"Ȳ\":\"Y\",\"Ɏ\":\"Y\",\"Ỹ\":\"Y\",\"Ź\":\"Z\",\"Ž\":\"Z\",\"Ẑ\":\"Z\",\"Ⱬ\":\"Z\",\"Ż\":\"Z\",\"Ẓ\":\"Z\",\"Ȥ\":\"Z\",\"Ẕ\":\"Z\",\"Ƶ\":\"Z\",\"Ĳ\":\"IJ\",\"Œ\":\"OE\",\"ᴀ\":\"A\",\"ᴁ\":\"AE\",\"ʙ\":\"B\",\"ᴃ\":\"B\",\"ᴄ\":\"C\",\"ᴅ\":\"D\",\"ᴇ\":\"E\",\"ꜰ\":\"F\",\"ɢ\":\"G\",\"ʛ\":\"G\",\"ʜ\":\"H\",\"ɪ\":\"I\",\"ʁ\":\"R\",\"ᴊ\":\"J\",\"ᴋ\":\"K\",\"ʟ\":\"L\",\"ᴌ\":\"L\",\"ᴍ\":\"M\",\"ɴ\":\"N\",\"ᴏ\":\"O\",\"ɶ\":\"OE\",\"ᴐ\":\"O\",\"ᴕ\":\"OU\",\"ᴘ\":\"P\",\"ʀ\":\"R\",\"ᴎ\":\"N\",\"ᴙ\":\"R\",\"ꜱ\":\"S\",\"ᴛ\":\"T\",\"ⱻ\":\"E\",\"ᴚ\":\"R\",\"ᴜ\":\"U\",\"ᴠ\":\"V\",\"ᴡ\":\"W\",\"ʏ\":\"Y\",\"ᴢ\":\"Z\",\"á\":\"a\",\"ă\":\"a\",\"ắ\":\"a\",\"ặ\":\"a\",\"ằ\":\"a\",\"ẳ\":\"a\",\"ẵ\":\"a\",\"ǎ\":\"a\",\"â\":\"a\",\"ấ\":\"a\",\"ậ\":\"a\",\"ầ\":\"a\",\"ẩ\":\"a\",\"ẫ\":\"a\",\"ä\":\"a\",\"ǟ\":\"a\",\"ȧ\":\"a\",\"ǡ\":\"a\",\"ạ\":\"a\",\"ȁ\":\"a\",\"à\":\"a\",\"ả\":\"a\",\"ȃ\":\"a\",\"ā\":\"a\",\"ą\":\"a\",\"ᶏ\":\"a\",\"ẚ\":\"a\",\"å\":\"a\",\"ǻ\":\"a\",\"ḁ\":\"a\",\"ⱥ\":\"a\",\"ã\":\"a\",\"ꜳ\":\"aa\",\"æ\":\"ae\",\"ǽ\":\"ae\",\"ǣ\":\"ae\",\"ꜵ\":\"ao\",\"ꜷ\":\"au\",\"ꜹ\":\"av\",\"ꜻ\":\"av\",\"ꜽ\":\"ay\",\"ḃ\":\"b\",\"ḅ\":\"b\",\"ɓ\":\"b\",\"ḇ\":\"b\",\"ᵬ\":\"b\",\"ᶀ\":\"b\",\"ƀ\":\"b\",\"ƃ\":\"b\",\"ɵ\":\"o\",\"ć\":\"c\",\"č\":\"c\",\"ç\":\"c\",\"ḉ\":\"c\",\"ĉ\":\"c\",\"ɕ\":\"c\",\"ċ\":\"c\",\"ƈ\":\"c\",\"ȼ\":\"c\",\"ď\":\"d\",\"ḑ\":\"d\",\"ḓ\":\"d\",\"ȡ\":\"d\",\"ḋ\":\"d\",\"ḍ\":\"d\",\"ɗ\":\"d\",\"ᶑ\":\"d\",\"ḏ\":\"d\",\"ᵭ\":\"d\",\"ᶁ\":\"d\",\"đ\":\"d\",\"ɖ\":\"d\",\"ƌ\":\"d\",\"ı\":\"i\",\"ȷ\":\"j\",\"ɟ\":\"j\",\"ʄ\":\"j\",\"ǳ\":\"dz\",\"ǆ\":\"dz\",\"é\":\"e\",\"ĕ\":\"e\",\"ě\":\"e\",\"ȩ\":\"e\",\"ḝ\":\"e\",\"ê\":\"e\",\"ế\":\"e\",\"ệ\":\"e\",\"ề\":\"e\",\"ể\":\"e\",\"ễ\":\"e\",\"ḙ\":\"e\",\"ë\":\"e\",\"ė\":\"e\",\"ẹ\":\"e\",\"ȅ\":\"e\",\"è\":\"e\",\"ẻ\":\"e\",\"ȇ\":\"e\",\"ē\":\"e\",\"ḗ\":\"e\",\"ḕ\":\"e\",\"ⱸ\":\"e\",\"ę\":\"e\",\"ᶒ\":\"e\",\"ɇ\":\"e\",\"ẽ\":\"e\",\"ḛ\":\"e\",\"ꝫ\":\"et\",\"ḟ\":\"f\",\"ƒ\":\"f\",\"ᵮ\":\"f\",\"ᶂ\":\"f\",\"ǵ\":\"g\",\"ğ\":\"g\",\"ǧ\":\"g\",\"ģ\":\"g\",\"ĝ\":\"g\",\"ġ\":\"g\",\"ɠ\":\"g\",\"ḡ\":\"g\",\"ᶃ\":\"g\",\"ǥ\":\"g\",\"ḫ\":\"h\",\"ȟ\":\"h\",\"ḩ\":\"h\",\"ĥ\":\"h\",\"ⱨ\":\"h\",\"ḧ\":\"h\",\"ḣ\":\"h\",\"ḥ\":\"h\",\"ɦ\":\"h\",\"ẖ\":\"h\",\"ħ\":\"h\",\"ƕ\":\"hv\",\"í\":\"i\",\"ĭ\":\"i\",\"ǐ\":\"i\",\"î\":\"i\",\"ï\":\"i\",\"ḯ\":\"i\",\"ị\":\"i\",\"ȉ\":\"i\",\"ì\":\"i\",\"ỉ\":\"i\",\"ȋ\":\"i\",\"ī\":\"i\",\"į\":\"i\",\"ᶖ\":\"i\",\"ɨ\":\"i\",\"ĩ\":\"i\",\"ḭ\":\"i\",\"ꝺ\":\"d\",\"ꝼ\":\"f\",\"ᵹ\":\"g\",\"ꞃ\":\"r\",\"ꞅ\":\"s\",\"ꞇ\":\"t\",\"ꝭ\":\"is\",\"ǰ\":\"j\",\"ĵ\":\"j\",\"ʝ\":\"j\",\"ɉ\":\"j\",\"ḱ\":\"k\",\"ǩ\":\"k\",\"ķ\":\"k\",\"ⱪ\":\"k\",\"ꝃ\":\"k\",\"ḳ\":\"k\",\"ƙ\":\"k\",\"ḵ\":\"k\",\"ᶄ\":\"k\",\"ꝁ\":\"k\",\"ꝅ\":\"k\",\"ĺ\":\"l\",\"ƚ\":\"l\",\"ɬ\":\"l\",\"ľ\":\"l\",\"ļ\":\"l\",\"ḽ\":\"l\",\"ȴ\":\"l\",\"ḷ\":\"l\",\"ḹ\":\"l\",\"ⱡ\":\"l\",\"ꝉ\":\"l\",\"ḻ\":\"l\",\"ŀ\":\"l\",\"ɫ\":\"l\",\"ᶅ\":\"l\",\"ɭ\":\"l\",\"ł\":\"l\",\"ǉ\":\"lj\",\"ſ\":\"s\",\"ẜ\":\"s\",\"ẛ\":\"s\",\"ẝ\":\"s\",\"ḿ\":\"m\",\"ṁ\":\"m\",\"ṃ\":\"m\",\"ɱ\":\"m\",\"ᵯ\":\"m\",\"ᶆ\":\"m\",\"ń\":\"n\",\"ň\":\"n\",\"ņ\":\"n\",\"ṋ\":\"n\",\"ȵ\":\"n\",\"ṅ\":\"n\",\"ṇ\":\"n\",\"ǹ\":\"n\",\"ɲ\":\"n\",\"ṉ\":\"n\",\"ƞ\":\"n\",\"ᵰ\":\"n\",\"ᶇ\":\"n\",\"ɳ\":\"n\",\"ñ\":\"n\",\"ǌ\":\"nj\",\"ó\":\"o\",\"ŏ\":\"o\",\"ǒ\":\"o\",\"ô\":\"o\",\"ố\":\"o\",\"ộ\":\"o\",\"ồ\":\"o\",\"ổ\":\"o\",\"ỗ\":\"o\",\"ö\":\"o\",\"ȫ\":\"o\",\"ȯ\":\"o\",\"ȱ\":\"o\",\"ọ\":\"o\",\"ő\":\"o\",\"ȍ\":\"o\",\"ò\":\"o\",\"ỏ\":\"o\",\"ơ\":\"o\",\"ớ\":\"o\",\"ợ\":\"o\",\"ờ\":\"o\",\"ở\":\"o\",\"ỡ\":\"o\",\"ȏ\":\"o\",\"ꝋ\":\"o\",\"ꝍ\":\"o\",\"ⱺ\":\"o\",\"ō\":\"o\",\"ṓ\":\"o\",\"ṑ\":\"o\",\"ǫ\":\"o\",\"ǭ\":\"o\",\"ø\":\"o\",\"ǿ\":\"o\",\"õ\":\"o\",\"ṍ\":\"o\",\"ṏ\":\"o\",\"ȭ\":\"o\",\"ƣ\":\"oi\",\"ꝏ\":\"oo\",\"ɛ\":\"e\",\"ᶓ\":\"e\",\"ɔ\":\"o\",\"ᶗ\":\"o\",\"ȣ\":\"ou\",\"ṕ\":\"p\",\"ṗ\":\"p\",\"ꝓ\":\"p\",\"ƥ\":\"p\",\"ᵱ\":\"p\",\"ᶈ\":\"p\",\"ꝕ\":\"p\",\"ᵽ\":\"p\",\"ꝑ\":\"p\",\"ꝙ\":\"q\",\"ʠ\":\"q\",\"ɋ\":\"q\",\"ꝗ\":\"q\",\"ŕ\":\"r\",\"ř\":\"r\",\"ŗ\":\"r\",\"ṙ\":\"r\",\"ṛ\":\"r\",\"ṝ\":\"r\",\"ȑ\":\"r\",\"ɾ\":\"r\",\"ᵳ\":\"r\",\"ȓ\":\"r\",\"ṟ\":\"r\",\"ɼ\":\"r\",\"ᵲ\":\"r\",\"ᶉ\":\"r\",\"ɍ\":\"r\",\"ɽ\":\"r\",\"ↄ\":\"c\",\"ꜿ\":\"c\",\"ɘ\":\"e\",\"ɿ\":\"r\",\"ś\":\"s\",\"ṥ\":\"s\",\"š\":\"s\",\"ṧ\":\"s\",\"ş\":\"s\",\"ŝ\":\"s\",\"ș\":\"s\",\"ṡ\":\"s\",\"ṣ\":\"s\",\"ṩ\":\"s\",\"ʂ\":\"s\",\"ᵴ\":\"s\",\"ᶊ\":\"s\",\"ȿ\":\"s\",\"ɡ\":\"g\",\"ß\":\"ss\",\"ᴑ\":\"o\",\"ᴓ\":\"o\",\"ᴝ\":\"u\",\"ť\":\"t\",\"ţ\":\"t\",\"ṱ\":\"t\",\"ț\":\"t\",\"ȶ\":\"t\",\"ẗ\":\"t\",\"ⱦ\":\"t\",\"ṫ\":\"t\",\"ṭ\":\"t\",\"ƭ\":\"t\",\"ṯ\":\"t\",\"ᵵ\":\"t\",\"ƫ\":\"t\",\"ʈ\":\"t\",\"ŧ\":\"t\",\"ᵺ\":\"th\",\"ɐ\":\"a\",\"ᴂ\":\"ae\",\"ǝ\":\"e\",\"ᵷ\":\"g\",\"ɥ\":\"h\",\"ʮ\":\"h\",\"ʯ\":\"h\",\"ᴉ\":\"i\",\"ʞ\":\"k\",\"ꞁ\":\"l\",\"ɯ\":\"m\",\"ɰ\":\"m\",\"ᴔ\":\"oe\",\"ɹ\":\"r\",\"ɻ\":\"r\",\"ɺ\":\"r\",\"ⱹ\":\"r\",\"ʇ\":\"t\",\"ʌ\":\"v\",\"ʍ\":\"w\",\"ʎ\":\"y\",\"ꜩ\":\"tz\",\"ú\":\"u\",\"ŭ\":\"u\",\"ǔ\":\"u\",\"û\":\"u\",\"ṷ\":\"u\",\"ü\":\"u\",\"ǘ\":\"u\",\"ǚ\":\"u\",\"ǜ\":\"u\",\"ǖ\":\"u\",\"ṳ\":\"u\",\"ụ\":\"u\",\"ű\":\"u\",\"ȕ\":\"u\",\"ù\":\"u\",\"ủ\":\"u\",\"ư\":\"u\",\"ứ\":\"u\",\"ự\":\"u\",\"ừ\":\"u\",\"ử\":\"u\",\"ữ\":\"u\",\"ȗ\":\"u\",\"ū\":\"u\",\"ṻ\":\"u\",\"ų\":\"u\",\"ᶙ\":\"u\",\"ů\":\"u\",\"ũ\":\"u\",\"ṹ\":\"u\",\"ṵ\":\"u\",\"ᵫ\":\"ue\",\"ꝸ\":\"um\",\"ⱴ\":\"v\",\"ꝟ\":\"v\",\"ṿ\":\"v\",\"ʋ\":\"v\",\"ᶌ\":\"v\",\"ⱱ\":\"v\",\"ṽ\":\"v\",\"ꝡ\":\"vy\",\"ẃ\":\"w\",\"ŵ\":\"w\",\"ẅ\":\"w\",\"ẇ\":\"w\",\"ẉ\":\"w\",\"ẁ\":\"w\",\"ⱳ\":\"w\",\"ẘ\":\"w\",\"ẍ\":\"x\",\"ẋ\":\"x\",\"ᶍ\":\"x\",\"ý\":\"y\",\"ŷ\":\"y\",\"ÿ\":\"y\",\"ẏ\":\"y\",\"ỵ\":\"y\",\"ỳ\":\"y\",\"ƴ\":\"y\",\"ỷ\":\"y\",\"ỿ\":\"y\",\"ȳ\":\"y\",\"ẙ\":\"y\",\"ɏ\":\"y\",\"ỹ\":\"y\",\"ź\":\"z\",\"ž\":\"z\",\"ẑ\":\"z\",\"ʑ\":\"z\",\"ⱬ\":\"z\",\"ż\":\"z\",\"ẓ\":\"z\",\"ȥ\":\"z\",\"ẕ\":\"z\",\"ᵶ\":\"z\",\"ᶎ\":\"z\",\"ʐ\":\"z\",\"ƶ\":\"z\",\"ɀ\":\"z\",\"ﬀ\":\"ff\",\"ﬃ\":\"ffi\",\"ﬄ\":\"ffl\",\"ﬁ\":\"fi\",\"ﬂ\":\"fl\",\"ĳ\":\"ij\",\"œ\":\"oe\",\"ﬆ\":\"st\",\"ₐ\":\"a\",\"ₑ\":\"e\",\"ᵢ\":\"i\",\"ⱼ\":\"j\",\"ₒ\":\"o\",\"ᵣ\":\"r\",\"ᵤ\":\"u\",\"ᵥ\":\"v\",\"ₓ\":\"x\"};\n\n//******************************************************************************\n// Added an initialize function which is essentially the code from the S\n// constructor.  Now, the S constructor calls this and a new method named\n// setValue calls it as well.  The setValue function allows constructors for\n// modules that extend string.js to set the initial value of an object without\n// knowing the internal workings of string.js.\n//\n// Also, all methods which return a new S object now call:\n//\n//      return new this.constructor(s);\n//\n// instead of:\n//\n//      return new S(s);\n//\n// This allows extended objects to keep their proper instanceOf and constructor.\n//******************************************************************************\n\n  function initialize (object, s) {\n    if (s !== null && s !== undefined) {\n      if (typeof s === 'string')\n        object.s = s;\n      else\n        object.s = s.toString();\n    } else {\n      object.s = s; //null or undefined\n    }\n\n    object.orig = s; //original object, currently only used by toCSV() and toBoolean()\n\n    if (s !== null && s !== undefined) {\n      if (object.__defineGetter__) {\n        object.__defineGetter__('length', function() {\n          return object.s.length;\n        })\n      } else {\n        object.length = s.length;\n      }\n    } else {\n      object.length = -1;\n    }\n  }\n\n  function S(s) {\n  \tinitialize(this, s);\n  }\n\n  var __nsp = String.prototype;\n  var __sp = S.prototype = {\n\n    between: function(left, right) {\n      var s = this.s;\n      var startPos = s.indexOf(left);\n      var endPos = s.indexOf(right, startPos + left.length);\n      if (endPos == -1 && right != null)\n        return new this.constructor('')\n      else if (endPos == -1 && right == null)\n        return new this.constructor(s.substring(startPos + left.length))\n      else\n        return new this.constructor(s.slice(startPos + left.length, endPos));\n    },\n\n    //# modified slightly from https://github.com/epeli/underscore.string\n    camelize: function() {\n      var s = this.trim().s.replace(/(\\-|_|\\s)+(.)?/g, function(mathc, sep, c) {\n        return (c ? c.toUpperCase() : '');\n      });\n      return new this.constructor(s);\n    },\n\n    capitalize: function() {\n      return new this.constructor(this.s.substr(0, 1).toUpperCase() + this.s.substring(1).toLowerCase());\n    },\n\n    charAt: function(index) {\n      return this.s.charAt(index);\n    },\n\n    chompLeft: function(prefix) {\n      var s = this.s;\n      if (s.indexOf(prefix) === 0) {\n         s = s.slice(prefix.length);\n         return new this.constructor(s);\n      } else {\n        return this;\n      }\n    },\n\n    chompRight: function(suffix) {\n      if (this.endsWith(suffix)) {\n        var s = this.s;\n        s = s.slice(0, s.length - suffix.length);\n        return new this.constructor(s);\n      } else {\n        return this;\n      }\n    },\n\n    //#thanks Google\n    collapseWhitespace: function() {\n      var s = this.s.replace(/[\\s\\xa0]+/g, ' ').replace(/^\\s+|\\s+$/g, '');\n      return new this.constructor(s);\n    },\n\n    contains: function(ss) {\n      return this.s.indexOf(ss) >= 0;\n    },\n\n    count: function(ss) {\n      return require('./_count')(this.s, ss)\n    },\n\n    //#modified from https://github.com/epeli/underscore.string\n    dasherize: function() {\n      var s = this.trim().s.replace(/[_\\s]+/g, '-').replace(/([A-Z])/g, '-$1').replace(/-+/g, '-').toLowerCase();\n      return new this.constructor(s);\n    },\n\n    latinise: function() {\n      var s = this.replace(/[^A-Za-z0-9\\[\\] ]/g, function(x) { return latin_map[x] || x; });\n      return new this.constructor(s);\n    },\n\n    decodeHtmlEntities: function() { //https://github.com/substack/node-ent/blob/master/index.js\n      var s = this.s;\n      s = s.replace(/&#(\\d+);?/g, function (_, code) {\n        return String.fromCharCode(code);\n      })\n      .replace(/&#[xX]([A-Fa-f0-9]+);?/g, function (_, hex) {\n        return String.fromCharCode(parseInt(hex, 16));\n      })\n      .replace(/&([^;\\W]+;?)/g, function (m, e) {\n        var ee = e.replace(/;$/, '');\n        var target = ENTITIES[e] || (e.match(/;$/) && ENTITIES[ee]);\n\n        if (typeof target === 'number') {\n          return String.fromCharCode(target);\n        }\n        else if (typeof target === 'string') {\n          return target;\n        }\n        else {\n          return m;\n        }\n      })\n\n      return new this.constructor(s);\n    },\n\n    endsWith: function() {\n      var suffixes = Array.prototype.slice.call(arguments, 0);\n      for (var i = 0; i < suffixes.length; ++i) {\n        var l  = this.s.length - suffixes[i].length;\n        if (l >= 0 && this.s.indexOf(suffixes[i], l) === l) return true;\n      }\n      return false;\n    },\n\n    escapeHTML: function() { //from underscore.string\n      return new this.constructor(this.s.replace(/[&<>\"']/g, function(m){ return '&' + reversedEscapeChars[m] + ';'; }));\n    },\n\n    ensureLeft: function(prefix) {\n      var s = this.s;\n      if (s.indexOf(prefix) === 0) {\n        return this;\n      } else {\n        return new this.constructor(prefix + s);\n      }\n    },\n\n    ensureRight: function(suffix) {\n      var s = this.s;\n      if (this.endsWith(suffix))  {\n        return this;\n      } else {\n        return new this.constructor(s + suffix);\n      }\n    },\n\n    humanize: function() { //modified from underscore.string\n      if (this.s === null || this.s === undefined)\n        return new this.constructor('')\n      var s = this.underscore().replace(/_id$/,'').replace(/_/g, ' ').trim().capitalize()\n      return new this.constructor(s)\n    },\n\n    isAlpha: function() {\n      return !/[^a-z\\xDF-\\xFF]|^$/.test(this.s.toLowerCase());\n    },\n\n    isAlphaNumeric: function() {\n      return !/[^0-9a-z\\xDF-\\xFF]/.test(this.s.toLowerCase());\n    },\n\n    isEmpty: function() {\n      return this.s === null || this.s === undefined ? true : /^[\\s\\xa0]*$/.test(this.s);\n    },\n\n    isLower: function() {\n      return this.isAlpha() && this.s.toLowerCase() === this.s;\n    },\n\n    isNumeric: function() {\n      return !/[^0-9]/.test(this.s);\n    },\n\n    isUpper: function() {\n      return this.isAlpha() && this.s.toUpperCase() === this.s;\n    },\n\n    left: function(N) {\n      if (N >= 0) {\n        var s = this.s.substr(0, N);\n        return new this.constructor(s);\n      } else {\n        return this.right(-N);\n      }\n    },\n\n    lines: function() { //convert windows newlines to unix newlines then convert to an Array of lines\n      return this.replaceAll('\\r\\n', '\\n').s.split('\\n');\n    },\n\n    pad: function(len, ch) { //https://github.com/component/pad\n      if (ch == null) ch = ' ';\n      if (this.s.length >= len) return new this.constructor(this.s);\n      len = len - this.s.length;\n      var left = Array(Math.ceil(len / 2) + 1).join(ch);\n      var right = Array(Math.floor(len / 2) + 1).join(ch);\n      return new this.constructor(left + this.s + right);\n    },\n\n    padLeft: function(len, ch) { //https://github.com/component/pad\n      if (ch == null) ch = ' ';\n      if (this.s.length >= len) return new this.constructor(this.s);\n      return new this.constructor(Array(len - this.s.length + 1).join(ch) + this.s);\n    },\n\n    padRight: function(len, ch) { //https://github.com/component/pad\n      if (ch == null) ch = ' ';\n      if (this.s.length >= len) return new this.constructor(this.s);\n      return new this.constructor(this.s + Array(len - this.s.length + 1).join(ch));\n    },\n\n    parseCSV: function(delimiter, qualifier, escape, lineDelimiter) { //try to parse no matter what\n      delimiter = delimiter || ',';\n      escape = escape || '\\\\'\n      if (typeof qualifier == 'undefined')\n        qualifier = '\"';\n\n      var i = 0, fieldBuffer = [], fields = [], len = this.s.length, inField = false, inUnqualifiedString = false, self = this;\n      var ca = function(i){return self.s.charAt(i)};\n      if (typeof lineDelimiter !== 'undefined') var rows = [];\n\n      if (!qualifier)\n        inField = true;\n\n      while (i < len) {\n        var current = ca(i);\n        switch (current) {\n          case escape:\n            //fix for issues #32 and #35\n            if (inField && ((escape !== qualifier) || ca(i+1) === qualifier)) {\n              i += 1;\n              fieldBuffer.push(ca(i));\n              break;\n            }\n            if (escape !== qualifier) break;\n          case qualifier:\n            inField = !inField;\n            break;\n          case delimiter:\n            if(inUnqualifiedString) {\n              inField=false;\n              inUnqualifiedString=false;\n            }\n            if (inField && qualifier)\n              fieldBuffer.push(current);\n            else {\n              fields.push(fieldBuffer.join(''))\n              fieldBuffer.length = 0;\n            }\n            break;\n          case lineDelimiter:\n            if(inUnqualifiedString) {\n              inField=false;\n              inUnqualifiedString=false;\n              fields.push(fieldBuffer.join(''))\n              rows.push(fields);\n              fields = [];\n              fieldBuffer.length = 0;\n            }\n            else if (inField) {\n              fieldBuffer.push(current);\n            } else {\n              if (rows) {\n                fields.push(fieldBuffer.join(''))\n                rows.push(fields);\n                fields = [];\n                fieldBuffer.length = 0;\n              }\n            }\n            break;\n          case ' ':\n            if (inField)\n              fieldBuffer.push(current);\n            break;\n          default:\n            if (inField)\n              fieldBuffer.push(current);\n            else if(current!==qualifier) {\n              fieldBuffer.push(current);\n              inField=true;\n              inUnqualifiedString=true;\n            }\n            break;\n        }\n        i += 1;\n      }\n\n      fields.push(fieldBuffer.join(''));\n      if (rows) {\n        rows.push(fields);\n        return rows;\n      }\n      return fields;\n    },\n\n    replaceAll: function(ss, r) {\n      //var s = this.s.replace(new RegExp(ss, 'g'), r);\n      var s = this.s.split(ss).join(r)\n      return new this.constructor(s);\n    },\n\n    splitLeft: function(sep, maxSplit, limit) {\n      return require('./_splitLeft')(this.s, sep, maxSplit, limit)\n    },\n\n    splitRight: function(sep, maxSplit, limit) {\n      return require('./_splitRight')(this.s, sep, maxSplit, limit)\n    },\n\n    strip: function() {\n      var ss = this.s;\n      for(var i= 0, n=arguments.length; i<n; i++) {\n        ss = ss.split(arguments[i]).join('');\n      }\n      return new this.constructor(ss);\n    },\n\n    stripLeft: function (chars) {\n      var regex;\n      var pattern;\n      var ss = ensureString(this.s);\n\n      if (chars === undefined) {\n        pattern = /^\\s+/g;\n      }\n      else {\n        regex = escapeRegExp(chars);\n        pattern = new RegExp(\"^[\" + regex + \"]+\", \"g\");\n      }\n\n      return new this.constructor(ss.replace(pattern, \"\"));\n    },\n\n    stripRight: function (chars) {\n      var regex;\n      var pattern;\n      var ss = ensureString(this.s);\n\n      if (chars === undefined) {\n        pattern = /\\s+$/g;\n      }\n      else {\n        regex = escapeRegExp(chars);\n        pattern = new RegExp(\"[\" + regex + \"]+$\", \"g\");\n      }\n\n      return new this.constructor(ss.replace(pattern, \"\"));\n    },\n\n    right: function(N) {\n      if (N >= 0) {\n        var s = this.s.substr(this.s.length - N, N);\n        return new this.constructor(s);\n      } else {\n        return this.left(-N);\n      }\n    },\n\n    setValue: function (s) {\n\t  initialize(this, s);\n\t  return this;\n    },\n\n    slugify: function() {\n      var sl = (new S(new S(this.s).latinise().s.replace(/[^\\w\\s-]/g, '').toLowerCase())).dasherize().s;\n      if (sl.charAt(0) === '-')\n        sl = sl.substr(1);\n      return new this.constructor(sl);\n    },\n\n    startsWith: function() {\n      var prefixes = Array.prototype.slice.call(arguments, 0);\n      for (var i = 0; i < prefixes.length; ++i) {\n        if (this.s.lastIndexOf(prefixes[i], 0) === 0) return true;\n      }\n      return false;\n    },\n\n    stripPunctuation: function() {\n      //return new this.constructor(this.s.replace(/[\\.,-\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\"));\n      return new this.constructor(this.s.replace(/[^\\w\\s]|_/g, \"\").replace(/\\s+/g, \" \"));\n    },\n\n    stripTags: function() { //from sugar.js\n      var s = this.s, args = arguments.length > 0 ? arguments : [''];\n      multiArgs(args, function(tag) {\n        s = s.replace(RegExp('<\\/?' + tag + '[^<>]*>', 'gi'), '');\n      });\n      return new this.constructor(s);\n    },\n\n    template: function(values, opening, closing) {\n      var s = this.s\n      var opening = opening || Export.TMPL_OPEN\n      var closing = closing || Export.TMPL_CLOSE\n\n      var open = opening.replace(/[-[\\]()*\\s]/g, \"\\\\$&\").replace(/\\$/g, '\\\\$')\n      var close = closing.replace(/[-[\\]()*\\s]/g, \"\\\\$&\").replace(/\\$/g, '\\\\$')\n      var r = new RegExp(open + '(.+?)' + close, 'g')\n        //, r = /\\{\\{(.+?)\\}\\}/g\n      var matches = s.match(r) || [];\n\n      matches.forEach(function(match) {\n        var key = match.substring(opening.length, match.length - closing.length).trim();//chop {{ and }}\n        var value = typeof values[key] == 'undefined' ? '' : values[key];\n        s = s.replace(match, value);\n      });\n      return new this.constructor(s);\n    },\n\n    times: function(n) {\n      return new this.constructor(new Array(n + 1).join(this.s));\n    },\n\n    titleCase: function() {\n      var s = this.s;\n      if (s) {\n        s = s.replace(/(^[a-z]| [a-z]|-[a-z]|_[a-z])/g,\n          function($1){\n            return $1.toUpperCase();\n          }\n        );\n      }\n      return new this.constructor(s);\n    },\n\n    toBoolean: function() {\n      if (typeof this.orig === 'string') {\n        var s = this.s.toLowerCase();\n        return s === 'true' || s === 'yes' || s === 'on' || s === '1';\n      } else\n        return this.orig === true || this.orig === 1;\n    },\n\n    toFloat: function(precision) {\n      var num = parseFloat(this.s)\n      if (precision)\n        return parseFloat(num.toFixed(precision))\n      else\n        return num\n    },\n\n    toInt: function() { //thanks Google\n      // If the string starts with '0x' or '-0x', parse as hex.\n      return /^\\s*-?0x/i.test(this.s) ? parseInt(this.s, 16) : parseInt(this.s, 10)\n    },\n\n    trim: function() {\n      var s;\n      if (typeof __nsp.trim === 'undefined')\n        s = this.s.replace(/(^\\s*|\\s*$)/g, '')\n      else\n        s = this.s.trim()\n      return new this.constructor(s);\n    },\n\n    trimLeft: function() {\n      var s;\n      if (__nsp.trimLeft)\n        s = this.s.trimLeft();\n      else\n        s = this.s.replace(/(^\\s*)/g, '');\n      return new this.constructor(s);\n    },\n\n    trimRight: function() {\n      var s;\n      if (__nsp.trimRight)\n        s = this.s.trimRight();\n      else\n        s = this.s.replace(/\\s+$/, '');\n      return new this.constructor(s);\n    },\n\n    truncate: function(length, pruneStr) { //from underscore.string, author: github.com/rwz\n      var str = this.s;\n\n      length = ~~length;\n      pruneStr = pruneStr || '...';\n\n      if (str.length <= length) return new this.constructor(str);\n\n      var tmpl = function(c){ return c.toUpperCase() !== c.toLowerCase() ? 'A' : ' '; },\n        template = str.slice(0, length+1).replace(/.(?=\\W*\\w*$)/g, tmpl); // 'Hello, world' -> 'HellAA AAAAA'\n\n      if (template.slice(template.length-2).match(/\\w\\w/))\n        template = template.replace(/\\s*\\S+$/, '');\n      else\n        template = new S(template.slice(0, template.length-1)).trimRight().s;\n\n      return (template+pruneStr).length > str.length ? new S(str) : new S(str.slice(0, template.length)+pruneStr);\n    },\n\n    toCSV: function() {\n      var delim = ',', qualifier = '\"', escape = '\\\\', encloseNumbers = true, keys = false;\n      var dataArray = [];\n\n      function hasVal(it) {\n        return it !== null && it !== '';\n      }\n\n      if (typeof arguments[0] === 'object') {\n        delim = arguments[0].delimiter || delim;\n        delim = arguments[0].separator || delim;\n        qualifier = arguments[0].qualifier || qualifier;\n        encloseNumbers = !!arguments[0].encloseNumbers;\n        escape = arguments[0].escape || escape;\n        keys = !!arguments[0].keys;\n      } else if (typeof arguments[0] === 'string') {\n        delim = arguments[0];\n      }\n\n      if (typeof arguments[1] === 'string')\n        qualifier = arguments[1];\n\n      if (arguments[1] === null)\n        qualifier = null;\n\n       if (this.orig instanceof Array)\n        dataArray  = this.orig;\n      else { //object\n        for (var key in this.orig)\n          if (this.orig.hasOwnProperty(key))\n            if (keys)\n              dataArray.push(key);\n            else\n              dataArray.push(this.orig[key]);\n      }\n\n      var rep = escape + qualifier;\n      var buildString = [];\n      for (var i = 0; i < dataArray.length; ++i) {\n        var shouldQualify = hasVal(qualifier)\n        if (typeof dataArray[i] == 'number')\n          shouldQualify &= encloseNumbers;\n\n        if (shouldQualify)\n          buildString.push(qualifier);\n\n        if (dataArray[i] !== null && dataArray[i] !== undefined) {\n          var d = new S(dataArray[i]).replaceAll(qualifier, rep).s;\n          buildString.push(d);\n        } else\n          buildString.push('')\n\n        if (shouldQualify)\n          buildString.push(qualifier);\n\n        if (delim)\n          buildString.push(delim);\n      }\n\n      //chop last delim\n      //console.log(buildString.length)\n      buildString.length = buildString.length - 1;\n      return new this.constructor(buildString.join(''));\n    },\n\n    toString: function() {\n      return this.s;\n    },\n\n    //#modified from https://github.com/epeli/underscore.string\n    underscore: function() {\n      var s = this.trim().s.replace(/([a-z\\d])([A-Z]+)/g, '$1_$2').replace(/([A-Z\\d]+)([A-Z][a-z])/g,'$1_$2').replace(/[-\\s]+/g, '_').toLowerCase();\n      return new this.constructor(s);\n    },\n\n    unescapeHTML: function() { //from underscore.string\n      return new this.constructor(this.s.replace(/\\&([^;]+);/g, function(entity, entityCode){\n        var match;\n\n        if (entityCode in escapeChars) {\n          return escapeChars[entityCode];\n        } else if (match = entityCode.match(/^#x([\\da-fA-F]+)$/)) {\n          return String.fromCharCode(parseInt(match[1], 16));\n        } else if (match = entityCode.match(/^#(\\d+)$/)) {\n          return String.fromCharCode(~~match[1]);\n        } else {\n          return entity;\n        }\n      }));\n    },\n\n    valueOf: function() {\n      return this.s.valueOf();\n    },\n\n    //#Added a New Function called wrapHTML.\n    wrapHTML: function (tagName, tagAttrs) {\n      var s = this.s, el = (tagName == null) ? 'span' : tagName, elAttr = '', wrapped = '';\n      if(typeof tagAttrs == 'object') for(var prop in tagAttrs) elAttr += ' ' + prop + '=\"' +(new this.constructor(tagAttrs[prop])).escapeHTML() + '\"';\n      s = wrapped.concat('<', el, elAttr, '>', this, '</', el, '>');\n      return new this.constructor(s);\n    }\n  }\n\n  var methodsAdded = [];\n  function extendPrototype() {\n    for (var name in __sp) {\n      (function(name){\n        var func = __sp[name];\n        if (!__nsp.hasOwnProperty(name)) {\n          methodsAdded.push(name);\n          __nsp[name] = function() {\n            String.prototype.s = this;\n            return func.apply(this, arguments);\n          }\n        }\n      })(name);\n    }\n  }\n\n  function restorePrototype() {\n    for (var i = 0; i < methodsAdded.length; ++i)\n      delete String.prototype[methodsAdded[i]];\n    methodsAdded.length = 0;\n  }\n\n\n/*************************************\n/* Attach Native JavaScript String Properties\n/*************************************/\n\n  var nativeProperties = getNativeStringProperties();\n  for (var name in nativeProperties) {\n    (function(name) {\n      var stringProp = __nsp[name];\n      if (typeof stringProp == 'function') {\n        //console.log(stringProp)\n        if (!__sp[name]) {\n          if (nativeProperties[name] === 'string') {\n            __sp[name] = function() {\n              //console.log(name)\n              return new this.constructor(stringProp.apply(this, arguments));\n            }\n          } else {\n            __sp[name] = stringProp;\n          }\n        }\n      }\n    })(name);\n  }\n\n\n/*************************************\n/* Function Aliases\n/*************************************/\n\n  __sp.repeat = __sp.times;\n  __sp.include = __sp.contains;\n  __sp.toInteger = __sp.toInt;\n  __sp.toBool = __sp.toBoolean;\n  __sp.decodeHTMLEntities = __sp.decodeHtmlEntities //ensure consistent casing scheme of 'HTML'\n\n\n//******************************************************************************\n// Set the constructor.  Without this, string.js objects are instances of\n// Object instead of S.\n//******************************************************************************\n\n  __sp.constructor = S;\n\n\n/*************************************\n/* Private Functions\n/*************************************/\n\n  function getNativeStringProperties() {\n    var names = getNativeStringPropertyNames();\n    var retObj = {};\n\n    for (var i = 0; i < names.length; ++i) {\n      var name = names[i];\n      if (name === 'to' || name === 'toEnd') continue;       // get rid of the shelljs prototype messup\n      var func = __nsp[name];\n      try {\n        var type = typeof func.apply('teststring');\n        retObj[name] = type;\n      } catch (e) {}\n    }\n    return retObj;\n  }\n\n  function getNativeStringPropertyNames() {\n    var results = [];\n    if (Object.getOwnPropertyNames) {\n      results = Object.getOwnPropertyNames(__nsp);\n      results.splice(results.indexOf('valueOf'), 1);\n      results.splice(results.indexOf('toString'), 1);\n      return results;\n    } else { //meant for legacy cruft, this could probably be made more efficient\n      var stringNames = {};\n      var objectNames = [];\n      for (var name in String.prototype)\n        stringNames[name] = name;\n\n      for (var name in Object.prototype)\n        delete stringNames[name];\n\n      //stringNames['toString'] = 'toString'; //this was deleted with the rest of the object names\n      for (var name in stringNames) {\n        results.push(name);\n      }\n      return results;\n    }\n  }\n\n  function Export(str) {\n    return new S(str);\n  };\n\n  //attach exports to StringJSWrapper\n  Export.extendPrototype = extendPrototype;\n  Export.restorePrototype = restorePrototype;\n  Export.VERSION = VERSION;\n  Export.TMPL_OPEN = '{{';\n  Export.TMPL_CLOSE = '}}';\n  Export.ENTITIES = ENTITIES;\n\n\n\n/*************************************\n/* Exports\n/*************************************/\n\n  if (typeof module !== 'undefined'  && typeof module.exports !== 'undefined') {\n    module.exports = Export;\n\n  } else {\n\n    if(typeof define === \"function\" && define.amd) {\n      define([], function() {\n        return Export;\n      });\n    } else {\n      window.S = Export;\n    }\n  }\n\n\n/*************************************\n/* 3rd Party Private Functions\n/*************************************/\n\n  //from sugar.js\n  function multiArgs(args, fn) {\n    var result = [], i;\n    for(i = 0; i < args.length; i++) {\n      result.push(args[i]);\n      if(fn) fn.call(args, args[i], i);\n    }\n    return result;\n  }\n\n  //from underscore.string\n  var escapeChars = {\n    lt: '<',\n    gt: '>',\n    quot: '\"',\n    apos: \"'\",\n    amp: '&'\n  };\n\n  function escapeRegExp (s) {\n    // most part from https://github.com/skulpt/skulpt/blob/ecaf75e69c2e539eff124b2ab45df0b01eaf2295/src/str.js#L242\n    var c;\n    var i;\n    var ret = [];\n    var re = /^[A-Za-z0-9]+$/;\n    s = ensureString(s);\n    for (i = 0; i < s.length; ++i) {\n      c = s.charAt(i);\n\n      if (re.test(c)) {\n        ret.push(c);\n      }\n      else {\n        if (c === \"\\\\000\") {\n          ret.push(\"\\\\000\");\n        }\n        else {\n          ret.push(\"\\\\\" + c);\n        }\n      }\n    }\n    return ret.join(\"\");\n  }\n\n  function ensureString(string) {\n    return string == null ? '' : '' + string;\n  }\n\n  //from underscore.string\n  var reversedEscapeChars = {};\n  for(var key in escapeChars){ reversedEscapeChars[escapeChars[key]] = key; }\n\n  ENTITIES = {\n    \"amp\" : \"&\",\n    \"gt\" : \">\",\n    \"lt\" : \"<\",\n    \"quot\" : \"\\\"\",\n    \"apos\" : \"'\",\n    \"AElig\" : 198,\n    \"Aacute\" : 193,\n    \"Acirc\" : 194,\n    \"Agrave\" : 192,\n    \"Aring\" : 197,\n    \"Atilde\" : 195,\n    \"Auml\" : 196,\n    \"Ccedil\" : 199,\n    \"ETH\" : 208,\n    \"Eacute\" : 201,\n    \"Ecirc\" : 202,\n    \"Egrave\" : 200,\n    \"Euml\" : 203,\n    \"Iacute\" : 205,\n    \"Icirc\" : 206,\n    \"Igrave\" : 204,\n    \"Iuml\" : 207,\n    \"Ntilde\" : 209,\n    \"Oacute\" : 211,\n    \"Ocirc\" : 212,\n    \"Ograve\" : 210,\n    \"Oslash\" : 216,\n    \"Otilde\" : 213,\n    \"Ouml\" : 214,\n    \"THORN\" : 222,\n    \"Uacute\" : 218,\n    \"Ucirc\" : 219,\n    \"Ugrave\" : 217,\n    \"Uuml\" : 220,\n    \"Yacute\" : 221,\n    \"aacute\" : 225,\n    \"acirc\" : 226,\n    \"aelig\" : 230,\n    \"agrave\" : 224,\n    \"aring\" : 229,\n    \"atilde\" : 227,\n    \"auml\" : 228,\n    \"ccedil\" : 231,\n    \"eacute\" : 233,\n    \"ecirc\" : 234,\n    \"egrave\" : 232,\n    \"eth\" : 240,\n    \"euml\" : 235,\n    \"iacute\" : 237,\n    \"icirc\" : 238,\n    \"igrave\" : 236,\n    \"iuml\" : 239,\n    \"ntilde\" : 241,\n    \"oacute\" : 243,\n    \"ocirc\" : 244,\n    \"ograve\" : 242,\n    \"oslash\" : 248,\n    \"otilde\" : 245,\n    \"ouml\" : 246,\n    \"szlig\" : 223,\n    \"thorn\" : 254,\n    \"uacute\" : 250,\n    \"ucirc\" : 251,\n    \"ugrave\" : 249,\n    \"uuml\" : 252,\n    \"yacute\" : 253,\n    \"yuml\" : 255,\n    \"copy\" : 169,\n    \"reg\" : 174,\n    \"nbsp\" : 160,\n    \"iexcl\" : 161,\n    \"cent\" : 162,\n    \"pound\" : 163,\n    \"curren\" : 164,\n    \"yen\" : 165,\n    \"brvbar\" : 166,\n    \"sect\" : 167,\n    \"uml\" : 168,\n    \"ordf\" : 170,\n    \"laquo\" : 171,\n    \"not\" : 172,\n    \"shy\" : 173,\n    \"macr\" : 175,\n    \"deg\" : 176,\n    \"plusmn\" : 177,\n    \"sup1\" : 185,\n    \"sup2\" : 178,\n    \"sup3\" : 179,\n    \"acute\" : 180,\n    \"micro\" : 181,\n    \"para\" : 182,\n    \"middot\" : 183,\n    \"cedil\" : 184,\n    \"ordm\" : 186,\n    \"raquo\" : 187,\n    \"frac14\" : 188,\n    \"frac12\" : 189,\n    \"frac34\" : 190,\n    \"iquest\" : 191,\n    \"times\" : 215,\n    \"divide\" : 247,\n    \"OElig;\" : 338,\n    \"oelig;\" : 339,\n    \"Scaron;\" : 352,\n    \"scaron;\" : 353,\n    \"Yuml;\" : 376,\n    \"fnof;\" : 402,\n    \"circ;\" : 710,\n    \"tilde;\" : 732,\n    \"Alpha;\" : 913,\n    \"Beta;\" : 914,\n    \"Gamma;\" : 915,\n    \"Delta;\" : 916,\n    \"Epsilon;\" : 917,\n    \"Zeta;\" : 918,\n    \"Eta;\" : 919,\n    \"Theta;\" : 920,\n    \"Iota;\" : 921,\n    \"Kappa;\" : 922,\n    \"Lambda;\" : 923,\n    \"Mu;\" : 924,\n    \"Nu;\" : 925,\n    \"Xi;\" : 926,\n    \"Omicron;\" : 927,\n    \"Pi;\" : 928,\n    \"Rho;\" : 929,\n    \"Sigma;\" : 931,\n    \"Tau;\" : 932,\n    \"Upsilon;\" : 933,\n    \"Phi;\" : 934,\n    \"Chi;\" : 935,\n    \"Psi;\" : 936,\n    \"Omega;\" : 937,\n    \"alpha;\" : 945,\n    \"beta;\" : 946,\n    \"gamma;\" : 947,\n    \"delta;\" : 948,\n    \"epsilon;\" : 949,\n    \"zeta;\" : 950,\n    \"eta;\" : 951,\n    \"theta;\" : 952,\n    \"iota;\" : 953,\n    \"kappa;\" : 954,\n    \"lambda;\" : 955,\n    \"mu;\" : 956,\n    \"nu;\" : 957,\n    \"xi;\" : 958,\n    \"omicron;\" : 959,\n    \"pi;\" : 960,\n    \"rho;\" : 961,\n    \"sigmaf;\" : 962,\n    \"sigma;\" : 963,\n    \"tau;\" : 964,\n    \"upsilon;\" : 965,\n    \"phi;\" : 966,\n    \"chi;\" : 967,\n    \"psi;\" : 968,\n    \"omega;\" : 969,\n    \"thetasym;\" : 977,\n    \"upsih;\" : 978,\n    \"piv;\" : 982,\n    \"ensp;\" : 8194,\n    \"emsp;\" : 8195,\n    \"thinsp;\" : 8201,\n    \"zwnj;\" : 8204,\n    \"zwj;\" : 8205,\n    \"lrm;\" : 8206,\n    \"rlm;\" : 8207,\n    \"ndash;\" : 8211,\n    \"mdash;\" : 8212,\n    \"lsquo;\" : 8216,\n    \"rsquo;\" : 8217,\n    \"sbquo;\" : 8218,\n    \"ldquo;\" : 8220,\n    \"rdquo;\" : 8221,\n    \"bdquo;\" : 8222,\n    \"dagger;\" : 8224,\n    \"Dagger;\" : 8225,\n    \"bull;\" : 8226,\n    \"hellip;\" : 8230,\n    \"permil;\" : 8240,\n    \"prime;\" : 8242,\n    \"Prime;\" : 8243,\n    \"lsaquo;\" : 8249,\n    \"rsaquo;\" : 8250,\n    \"oline;\" : 8254,\n    \"frasl;\" : 8260,\n    \"euro;\" : 8364,\n    \"image;\" : 8465,\n    \"weierp;\" : 8472,\n    \"real;\" : 8476,\n    \"trade;\" : 8482,\n    \"alefsym;\" : 8501,\n    \"larr;\" : 8592,\n    \"uarr;\" : 8593,\n    \"rarr;\" : 8594,\n    \"darr;\" : 8595,\n    \"harr;\" : 8596,\n    \"crarr;\" : 8629,\n    \"lArr;\" : 8656,\n    \"uArr;\" : 8657,\n    \"rArr;\" : 8658,\n    \"dArr;\" : 8659,\n    \"hArr;\" : 8660,\n    \"forall;\" : 8704,\n    \"part;\" : 8706,\n    \"exist;\" : 8707,\n    \"empty;\" : 8709,\n    \"nabla;\" : 8711,\n    \"isin;\" : 8712,\n    \"notin;\" : 8713,\n    \"ni;\" : 8715,\n    \"prod;\" : 8719,\n    \"sum;\" : 8721,\n    \"minus;\" : 8722,\n    \"lowast;\" : 8727,\n    \"radic;\" : 8730,\n    \"prop;\" : 8733,\n    \"infin;\" : 8734,\n    \"ang;\" : 8736,\n    \"and;\" : 8743,\n    \"or;\" : 8744,\n    \"cap;\" : 8745,\n    \"cup;\" : 8746,\n    \"int;\" : 8747,\n    \"there4;\" : 8756,\n    \"sim;\" : 8764,\n    \"cong;\" : 8773,\n    \"asymp;\" : 8776,\n    \"ne;\" : 8800,\n    \"equiv;\" : 8801,\n    \"le;\" : 8804,\n    \"ge;\" : 8805,\n    \"sub;\" : 8834,\n    \"sup;\" : 8835,\n    \"nsub;\" : 8836,\n    \"sube;\" : 8838,\n    \"supe;\" : 8839,\n    \"oplus;\" : 8853,\n    \"otimes;\" : 8855,\n    \"perp;\" : 8869,\n    \"sdot;\" : 8901,\n    \"lceil;\" : 8968,\n    \"rceil;\" : 8969,\n    \"lfloor;\" : 8970,\n    \"rfloor;\" : 8971,\n    \"lang;\" : 9001,\n    \"rang;\" : 9002,\n    \"loz;\" : 9674,\n    \"spades;\" : 9824,\n    \"clubs;\" : 9827,\n    \"hearts;\" : 9829,\n    \"diams;\" : 9830\n  }\n\n\n}).call(this);\n","/**\n * A list of common abbreviations which may falsely end a sentence prematurely.\n */\n\nmodule.exports = function () {\n\n\tvar commonContractions = [\n\t\t'jan.',\n\t\t'feb.',\n\t\t'mar.',\n\t\t'apr.',\n\t\t'may',\n\t\t'jun.',\n\t\t'jul.',\n\t\t'aug.',\n\t\t'sep.',\n\t\t'sept.',\n\t\t'oct.',\n\t\t'nov.',\n\t\t'dec.',\n\t\t'ak.',\n\t\t'al.',\n\t\t'az.',\n\t\t'ar.',\n\t\t'ca.',\n\t\t'ct.',\n\t\t'de.',\n\t\t'fl.',\n\t\t'ga.',\n\t\t'hi.',\n\t\t'id.',\n\t\t'il.',\n\t\t'in.',\n\t\t'ia.',\n\t\t'ks.',\n\t\t'ky.',\n\t\t'la.',\n\t\t'me.',\n\t\t'md.',\n\t\t'ma.',\n\t\t'mi.',\n\t\t'mn.',\n\t\t'ms.',\n\t\t'mo.',\n\t\t'mt.',\n\t\t'ne.',\n\t\t'nv.',\n\t\t'nh.',\n\t\t'nj.',\n\t\t'nm.',\n\t\t'ny.',\n\t\t'nc.',\n\t\t'nd.',\n\t\t'oh.',\n\t\t'ok.',\n\t\t'or.',\n\t\t'pa.',\n\t\t'ri.',\n\t\t'sc.',\n\t\t'sd.',\n\t\t'tn.',\n\t\t'tx.',\n\t\t'ut.',\n\t\t'vt.',\n\t\t'va.',\n\t\t'wa.',\n\t\t'wv.',\n\t\t'wi.',\n\t\t'wy.',\n\t\t'lt.'\n\t];\n\n\tfor(var i = 0; i < commonContractions.length; i++) {\n\t\tcommonContractions[i] = ' ' + commonContractions[i];\n\t}\n\n\treturn commonContractions;\n\n};","/**\n * “All this happened, more or less.”\n * ~ Kurt Vonnegut, Slaughterhouse-Five\n * -----------------------------------------------\n *\n * Main Script\n *\n */\n\n(function () {\n\n\t\"use strict\";\n\n\tvar S = require('string');\n\n\tvar keyPhrase = 'So it goes.';\n\n\tvar keywords = require('./keywords')();\n\tvar nodeExcludes = require('./node_excludes')();\n\tvar abbreviations = require('./abbreviations')();\n\tvar sentenceEndingExcludes = require('./sentence_excludes')();\n\tvar commonPhrases = require('./common_phrases')();\n\tvar urlExcludes = require('./url_excludes')();\n\tsentenceEndingExcludes.push(keyPhrase);\n\n\tvar processedNodes = [];\n\n\tvar keywordRegex = new RegExp(\"\\\\b(?:\"+ keywords +\")\\\\b\", \"im\");\n\n\tvar inlineTags = ['strong', 'em', 'i', 'b', 'big', 'i', 'small', 'tt', 'abbr', 'acronym'];\n\n\tfunction processNodes(nodes) {\n\n\t\tvar nodesIndex = nodes.length;\n\n\t\twhile (nodesIndex--) {\n\n\t\t\tprocessNode(nodes[nodesIndex]);\n\n\t\t}\n\n\t}\n\n\tfunction processNode(node) {\n\n\t\tswitch(node.nodeType) {\n\t\t\tcase 1:\n\t\t\tcase 9:\n\t\t\tcase 11:\n\n\t\t\t\tif(nodeExcludes.indexOf(node.nodeName.toLowerCase()) !== -1) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tif(keywordRegex.test(node.textContent) && inlineTags.indexOf(node.nodeName.toLowerCase()) !== -1) {\n\n\t\t\t\t\tfor(var i = 0; i < processedNodes.length; i++) {\n\t\t\t\t\t\tif(processedNodes[i].isSameNode(node) || node.parentNode.contains(processedNodes[i])) { return; }\n\t\t\t\t\t}\n\n\t\t\t\t\tprocessedNodes.push(node);\n\n\t\t\t\t\tprocessInlineTextNode(node);\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tif(!node.hasChildNodes()) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tprocessNodes(node.childNodes);\n\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\n\t\t\t\tif(keywordRegex.test(node.textContent)) {\n\n\t\t\t\t\tfor(var i = 0; i < processedNodes.length; i++) {\n\t\t\t\t\t\tif(processedNodes[i].isSameNode(node) || node.parentNode.contains(processedNodes[i])) { return; }\n\t\t\t\t\t}\n\n\t\t\t\t\tprocessedNodes.push(node);\n\n\t\t\t\t\treplaceKeywordInTextNode(node);\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\n\t}\n\n\tfunction processInlineTextNode(node) {\n\n\t\tvar parentNodeText = node.parentNode.innerHTML;\n\n\t\tvar nodeSentences = parseSentencesFromString(parentNodeText);\n\n\t\t/**\n\t\t * Fixes bug where the key phrase isn't recognized\n\t\t */\n\t\tfor(var i = 0; i < nodeSentences.length; i++) {\n\t\t\tif(nodeSentences[i].trim() === keyPhrase) {\n\t\t\t\tnodeSentences.splice(i-1, 2);\n\t\t\t}\n\t\t}\n\n\t\tvar keywordSentences = findKeywordInSentences(nodeSentences);\n\n\t\tvar replacedText = addKeywordToSentences(keywordSentences, parentNodeText);\n\n\t\tstopObserver();\n\t\tnode.parentNode.innerHTML = replacedText;\n\t\tstartObserver();\n\n\t}\n\n\tfunction replaceKeywordInTextNode(node) {\n\n\t\tvar nodeText = node.textContent;\n\n\t\tvar nodeSentences = parseSentencesFromString(nodeText);\n\n\t\tvar keywordSentences = findKeywordInSentences(nodeSentences);\n\n\t\tvar replacedText = addKeywordToSentences(keywordSentences, nodeText);\n\n\t\tstopObserver();\n\t\tnode.textContent = replacedText;\n\t\tstartObserver();\n\n\t}\n\n\t/**\n\t * Split each sentence and add it to an array\n\t * http://stackoverflow.com/a/31430385\n\t */\n\tfunction parseSentencesFromString(text) {\n\n\t\tvar sentences = text.replace(/(\\.+|\\!|\\?)(\\\"*|\\'*|\\)*|}*|]*)(\\s|\\n|\\r|\\r\\n)/m, \"$1$2|\").split(\"|\");\n\n\t\tfor(var i = 0; i < sentences.length; i++) {\n\n\t\t\tvar sentence = sentences[i].trim().toLowerCase();\n\n\t\t\t/**\n\t\t\t * If our sentence is empty or ends in something we're excluding remove it from the array\n\t\t\t */\n\t\t\tif(sentence === '' || sentence.split(\" \").length === 1 || endsWith(sentence, sentenceEndingExcludes)) {\n\n\t\t\t\tsentences.splice(i, 1);\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif(sentence.length > 2 && sentence.substr(sentence.length - 3, 1) === ' ') {\n\n\t\t\t\tsentences.splice(i, 1);\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif(hasCommonPhrase(sentence)) {\n\n\t\t\t\tsentences.splice(i, 1);\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * If our sentence ends in an abbreviation we'll assume it's been wrongly interpreted\n\t\t\t * and splice it back with the next sentence\n\t\t\t */\n\t\t\tif(endsWith(sentence, abbreviations)) {\n\n\t\t\t\tif(typeof sentences[ i + 1 ] == 'undefined') {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tsentences[i] = sentences[i] + ' ' + sentences[ i + 1 ];\n\t\t\t\ti++;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn sentences;\n\n\t}\n\n\tfunction hasCommonPhrase(text) {\n\n\t\tfor(var i = 0; i < commonPhrases.length; i++) {\n\t\t\tif(text.indexOf(commonPhrases[i]) !== -1) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction findKeywordInSentences(sentences) {\n\n\t\tvar keywordSentences = [];\n\n\t\tfor(var i = 0; i < sentences.length; i++) {\n\n\t\t\tif(!keywordRegex.test(sentences[i])) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tkeywordSentences.push(sentences[i]);\n\n\t\t}\n\n\t\treturn keywordSentences;\n\n\t}\n\n\tfunction addKeywordToSentences(sentences, text) {\n\n\t\t/**\n\t\t * For every sentence with a keyword clean it up a bit then replace it with the copy with the replacement\n\t\t */\n\t\tfor(var i = 0; i < sentences.length; i++) {\n\n\t\t\tvar replacedText = addKeywordToSentence(sentences[i]);\n\n\t\t\ttext = text.replace(new RegExp(sentences[i], 'im'), replacedText);\n\n\t\t}\n\n\t\treturn text;\n\n\t}\n\n\tfunction addKeywordToSentence(sentence) {\n\n\t\t// Make copy to format, strip all whitespace on the right\n\t\tvar newSentence = sentence.replace(/~+$/, '');\n\n\t\t// If it doesn't end in any punctuation add a period\n\t\tif(!endsWith(newSentence.trim(), [\"!\",\"?\",\".\"])) {\n\t\t\tnewSentence = newSentence + '.';\n\t\t}\n\n\t\treturn newSentence + ' ' + keyPhrase;\n\n\t}\n\n\t/**\n\t * Checks if a string ends in a \"suffix\".\n\t * Accepts both a string and an array for the suffix.\n\t */\n\tfunction endsWith(str, suffix) {\n\n\t\tif(!suffix instanceof Array) {\n\t\t\tsuffix = [suffix];\n\t\t}\n\n\t\tfor(var i = 0; i < suffix.length; i++) {\n\n\t\t\tif(str.indexOf(suffix[i], str.length - suffix[i].length) !== -1) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tvar observer = new MutationObserver(function(mutations) {\n\n\t\tmutations.forEach(function(mutation) {\n\t\t\tif(mutation.addedNodes.length > 0) {\n\n\t\t\t\tprocessNode(mutation.target);\n\n\t\t\t}\n\t\t});\n\n\t});\n\n\tvar config = { subtree: true, childList: true, characterData: true };\n\n\tfunction stopObserver() {\n\t\tobserver.disconnect();\n\t}\n\tfunction startObserver() {\n\t\tobserver.observe(document.body, config);\n\t}\n\n\tfunction urlExcluded(url) {\n\t\tfor(var i = 0; i < urlExcludes.length; i++) {\n\t\t\tif(urlExcludes[i].test(url)) { return true; }\n\t\t}\n\t\treturn false;\n\t}\n\n\tif(!urlExcluded(window.location.href)) {\n\n\t\tstartObserver();\n\n\t\tprocessNodes(document.body.childNodes);\n\n\t}\n\n}());","/**\n * A list of common phrases which may trip up the extension\n */\n\nmodule.exports = function () {\n\n\tvar commonPhrases = [\n\t\t'dead wrong',\n\t\t\"at deaths door\",\n\t\t'half dead',\n\t\t'dead set against',\n\t\t'over my dead body',\n\t\t'dead in the water',\n\t\t'dead as a dodo',\n\t\t'dead as a doornail',\n\t\t'drop dead',\n\t\t'to be killed'\n\t];\n\n\treturn commonPhrases;\n\n};","/**\n * A list of our keywords that trigger the key phrase\n */\n\nmodule.exports = function () {\n\n\tvar keywords = [\n\t\t\"dead\",\n\t\t\"deaths\",\n\t\t\"dies\",\n\t\t\"died\",\n\t\t\"hanged\",\n\t\t\"murdered\",\n\t\t\"assassinated\",\n\t\t\"executed\",\n\t\t\"killed\",\n\t\t\"killing\",\n\t\t\"drowned\",\n\t\t\"massacred\",\n\t\t\"slain\",\n\t\t\"slayings\",\n\t\t\"slaying\",\n\t\t\"passed away\",\n\t\t\"fatally shot\"\n\t];\n\n\treturn keywords.join('|');\n};","/**\n * A list of Nodes we want to ignore\n */\n\nmodule.exports = function () {\n\n\tvar excludes = ['html', 'body', 'head', 'style', 'title', 'link', 'meta', 'script', 'object', 'iframe', 'cite'];\n\n\treturn excludes;\n\n};","/**\n * A list of things that might mess up our sentences and therefore will exclude\n */\n\nmodule.exports = function () {\n\n\tvar sentenceEndingExcludes = [\n\t\t'..'\n\t];\n\n\treturn sentenceEndingExcludes;\n\n};","/**\n * URL's which should be excluded from this extension\n */\n\nmodule.exports = function () {\n\n\tvar urlExcludes = [\n\t\t/google.com\\/search/,\n\t];\n\n\treturn urlExcludes;\n\n};"],"sourceRoot":"/source/"}